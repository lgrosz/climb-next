schema {
  query: QueryRoot
  mutation: MutationRoot
}

type Area {
  areas: [Area!]!
  climbs: [Climb!]!
  description: String
  formations: [Formation!]!
  id: ID!
  name: String
  parent: AreaParent
}

union AreaParent = Area

input AreaParentInput {
  area: Int
}

type BasisSpline {
  controlPoints: [Point2D!]!
  degree: Int!
  knots: [Float!]!
}

input BasisSplineInput {
  controlPoints: [Point2DInput!]!
  degree: Int!
  knots: [Float!]!
}

type Climb {
  description: String
  grades: [Grade!]!
  id: ID!
  name: String
  parent: ClimbParent
}

union ClimbParent = Area | Formation

input ClimbParentInput {
  area: Int
  formation: Int
}

type Coordinate {
  latitude: Float!
  longitude: Float!
}

input CoordinateInput {
  latitude: Float!
  longitude: Float!
}


type Fontainebleau {
  value: FontainebleauGrade!
}

scalar FontainebleauGrade

type Formation {
  climbs: [Climb!]!
  description: String
  formations: [Formation!]!
  id: ID!
  images: [Image!]!
  location: Coordinate
  name: String
  parent: FormationParent
}

union FormationParent = Area | Formation

input FormationParentInput {
  area: Int
  formation: Int
}

union Grade = Fontainebleau | Vermin | YosemiteDecimal

input GradeInput {
  fontainebleau: FontainebleauGrade
  vermin: VerminGrade
  yosemiteDecimal: YosemiteDecimalGrade
}

type Image {
  alt: String
  downloadUrl: String
  formations: [Formation!]!
  id: ID!
}

type ImageMutationRoot {
  tagFormation(
    """Formation ID"""
    id: ID!
  ): Image!
  untagFormation(
    """Formation ID"""
    id: ID!
  ): Image!
}

type MutationRoot {
  addArea(
    """Area name"""
    name: String

    """Area parent"""
    parent: AreaParentInput
  ): Area!
  addClimb(
    """Climb name"""
    name: String

    """Climb parent"""
    parent: ClimbParentInput
  ): Climb!
  addClimbGrade(
    """Grade"""
    grade: GradeInput!

    """Climb id"""
    id: ID!
  ): Climb!
  addFormation(
    """Formation location"""
    location: CoordinateInput

    """Formation name"""
    name: String

    """Formation parent"""
    parent: FormationParentInput
  ): Formation!
  addTopo(
    """Topo height"""
    height: Float!

    """Topo title"""
    title: String

    """Topo width"""
    width: Float!
  ): Topo!
  describeArea(
    """Area description"""
    description: String

    """Area id"""
    id: ID!
  ): Area!
  describeClimb(
    """Climb description"""
    description: String

    """Climb id"""
    id: ID!
  ): Climb!
  describeFormation(
    """Formation description"""
    description: String

    """Formation id"""
    id: ID!
  ): Formation!
  image(
    """ID of image"""
    id: ID!
  ): ImageMutationRoot!
  moveArea(
    """Area id"""
    id: ID!

    """Area parent"""
    parent: AreaParentInput
  ): Area!
  moveClimb(
    """Climb id"""
    id: ID!

    """Climb parent"""
    parent: ClimbParentInput
  ): Climb!
  moveFormation(
    """Formation id"""
    id: ID!

    """Formation parent"""
    parent: FormationParentInput
  ): Formation!
  prepareImageUpload(
    """Alternative text"""
    alt: String

    """IDs of formations in this image"""
    formationIds: [ID!]

    """Name of image file"""
    name: String!
  ): PrepareImageUploadResult!
  relocateFormation(
    """Formation id"""
    id: ID!

    """Formation location"""
    location: CoordinateInput
  ): Formation!
  removeArea(
    """Area id"""
    id: ID!
  ): Area!
  removeClimb(
    """Climb id"""
    id: ID!
  ): Climb!
  removeClimbGrade(
    """Grade"""
    grade: GradeInput!

    """Climb id"""
    id: ID!
  ): Climb!
  removeFormation(
    """Formation id"""
    id: ID!
  ): Formation!
  renameArea(
    """Area id"""
    id: ID!

    """Area name"""
    name: String
  ): Area!
  renameClimb(
    """Climb id"""
    id: ID!

    """Climb name"""
    name: String
  ): Climb!
  renameFormation(
    """Formation id"""
    id: ID!

    """Formation name"""
    name: String
  ): Formation!
  topo(
    """ID of topo"""
    id: ID!
  ): TopoMutationRoot!
}

type PathFeatureMutationRoot {
  assignClimb(id: ID!): TopoPathFeature!
  updateGeometry(geometry: TopoPathGeometryInput!): TopoPathFeature!
}

type Point2D {
  x: Float!
  y: Float!
}

input Point2DInput {
  x: Float!
  y: Float!
}

type PrepareImageUploadResult {
  image: Image!
  uploadUrl: String!
}

type QueryRoot {
  area(
    """Area id"""
    id: ID!
  ): Area!
  areas: [Area!]!
  areasByParent(
    """Area parent"""
    parent: AreaParentInput
  ): [Area!]!
  climb(
    """Climb id"""
    id: ID!
  ): Climb!
  climbs: [Climb!]!
  climbsByParent(
    """Climb parent"""
    parent: ClimbParentInput
  ): [Climb!]!
  formation(
    """Formation id"""
    id: ID!
  ): Formation!
  formations: [Formation!]!
  formationsByParent(
    """Formation parent"""
    parent: FormationParentInput
  ): [Formation!]!
  image(id: ID!): Image!
  images: [Image!]!
  topo(id: ID!): Topo!
  toposByFormation(id: ID!): [Topo!]!
}

type Rect {
  max: Point2D!
  min: Point2D!
}

input RectInput {
  max: Point2DInput!
  min: Point2DInput!
}

type Topo {
  features: [TopoFeature!]!
  height: Float!
  id: ID!
  title: String
  width: Float!
}

interface TopoFeature {
  id: ID!
}

input TopoFeatureInput {
  image: TopoImageFeatureInput
  path: TopoPathFeatureInput
}

union TopoFeatureMutationRoot = PathFeatureMutationRoot

type TopoImageFeature implements TopoFeature {
  dest: Rect!
  id: ID!
  image: Image!
  source: Rect
}

input TopoImageFeatureInput {
  dest: RectInput!
  imageId: Int!
  source: RectInput
}

type TopoMutationRoot {
  addFeature(feature: TopoFeatureInput!): Topo!
  feature(id: ID!): TopoFeatureMutationRoot!
  removeFeature(id: ID!): Topo!
  title(title: String): Topo!
}

type TopoPathFeature implements TopoFeature {
  climb: Climb!
  geometry: TopoPathGeometry!
  id: ID!
}

input TopoPathFeatureInput {
  climbId: ID!
  geometry: TopoPathGeometryInput!
}

union TopoPathGeometry = BasisSpline

input TopoPathGeometryInput {
  basisSpline: BasisSplineInput
}

type Vermin {
  value: VerminGrade!
}

scalar VerminGrade

type YosemiteDecimal {
  value: YosemiteDecimalGrade!
}

scalar YosemiteDecimalGrade